<application>
  <component name="AppStorage">
    <histories>
      <item value="placeholder" />
      <item value="placeholder texture for area light LUTs" />
      <item value="@param {GraphicsDevice} graphicsDevice - The graphics device used by the renderer." />
      <item value="@returns {ProgramLibrary} The program library assigned to the device." />
      <item value="@description Retrieves the program library assigned to the specified graphics device." />
      <item value="@param {object} [options] - Options passed when creating the WebGL context. More info {@link https:developer.mozilla.orgen-USdocsWebAPIHTMLCanvasElementgetContext here}." />
      <item value="@property {HTMLCanvasElement} canvas The canvas DOM element that provides the underlying WebGL context used by the graphics device." />
      <item value="@property {ScopeSpace} scope The scope namespace for shader attributes and variables. [read only]." />
      <item value="against" />
      <item value="against each" />
      <item value="It is valid to have more than one canvas element per page and create a new graphics device against each." />
      <item value="valid" />
      <item value="A graphics device is tied to a specific canvas HTML element." />
      <item value="@classdesc The graphics device manages the underlying graphics context. It is responsible for submitting render state changes and graphics primitives to the hardware. A graphics" />
      <item value="@description The 'resizecanvas' event is fired when the canvas is resized." />
      <item value="@description The maximum supported texture anisotropy setting." />
      <item value="@description The maximum supported dimension of a cube map." />
      <item value="@description The highest shader precision supported by this graphics device. Can be 'hiphp', 'mediump' or 'lowp'." />
      <item value="@name GraphicsDeviceprecision" />
      <item value="This function is called internally in the application's main loop and does not need to be called explicitly." />
      <item value="@description Render the application's scene. More specifically, the scene's {@link LayerComposition} is rendered by the application's {@link ForwardRenderer}." />
      <item value="@param {GraphicsDevice} [graphicsDevice] - The graphics device used to manage this layer composition. If it is not provided, a device is obtained" />
      <item value="@classdesc Layer Composition is a collection of {@link Layer} that is fed to {@link Scenelayers} to define rendering order." />
      <item value="Composition" />
      <item value="Layers are organized inside {@link LayerComposition} in a desired order." />
      <item value="@param {object} options - Object for passing optional arguments. These arguments are the same as properties of the Layer." />
      <item value="@classdesc Layer represents a renderable subset of the scene. It can contain a list of mesh instances, lights and cameras, their render settings and also defines custom callbacks before, after or during rendering." />
      <item value="@classdesc Layer represents a renderable subset of the scene. It can contain a list of mesh instances, lights and cameras, their render settings and also defines custom callbacks before, after or during rendering. Layers are organized inside {@link LayerComposition} in a desired order." />
      <item value="@property {Asset[]|number[]} materialAssets The material assets that will be used to render the meshes. Each material corresponds to the respective mesh instance." />
      <item value="@property {Asset|number} asset The render asset for the render component (only applies to type 'asset') - can also be an asset id." />
      <item value="geometry" />
      <item value="@classdesc Enables an Entity to render a {@link Mesh} or a primitive shape. This component attaches {@link MeshInstance} geometry to the Entity." />
      <item value="@param {object} [data] - The initialization data for the specific component type. Refer to each specific component's API reference page for details on valid values for this parameter." />
      <item value="sync Hierarchy" />
      <item value="Timing stats" />
      <item value="Depending on browser add the correct visibiltychange event and store the name of the hidden attribute in this._hiddenAttr." />
      <item value="@description Get the current application. In the case where there are multiple running applications, the function can get an application based on a supplied canvas id." />
      <item value="@description Get the current application. In the case where there are multiple running applications, the function can get an application based on a supplied canvas id. This" />
      <item value="this.tick = makeTick(this); Circular linting issue as makeTick and Application reference each other" />
      <item value="eslint-disable-next-line no-use-before-define" />
      <item value="bind tick function to current scope" />
      <item value="@classdesc Resource handler used for loading {@link Render} resources." />
      <item value="@param {StandardMaterial} defaultMaterial - The shared default material that is used in any place that a material is not specified." />
      <item value="enable if you want entity type script attributes to not be re-mapped when an entity is cloned" />
      <item value="revision" />
      <item value="Handles localization." />
      <item value="@description Handles localization." />
      <item value="@description Set to true to render the scene on the next iteration of the main loop." />
      <item value="@description The graphics device used by the application." />
      <item value="Clamps per-frame delta time to an upper bound. Useful since returning from a tab deactivation can generate huge values for dt, which can adversely affect game state." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="143" />
        <entry key="ENGLISH" value="144" />
        <entry key="LATIN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1625556820815" />
  </component>
</application>