<application>
  <component name="AppStorage">
    <histories>
      <item value="@description Creates a new forward renderer object." />
      <item value="@classdesc The forward renderer render scene objects." />
      <item value="Generates and applies the lightmaps." />
      <item value="{@link BAKE_COLOR}: single color lightmap" />
      <item value="@param {Entity[]|null} nodes - An array of entities (with model or render components) to render lightmaps for. If not supplied, the entire scene will be baked." />
      <item value="prepare Shadow Casters" />
      <item value="@classdesc The lightmapper is used to bake scene lights into textures." />
      <item value="@param {GraphicsDevice} device - The grahpics device used by the lightmapper." />
      <item value="@param {Entity} root - The root entity of the scene." />
      <item value="@param {Scene} scene - The scene to lightmap." />
      <item value="@param {AssetRegistry} assets - Registry of assets to lightmap." />
      <item value="destroy temporary directional lights as they are costly to keep around" />
      <item value="Create an entity with a render component that is set up to be lightmapped with baked direct lighting" />
      <item value="@param {number} primitive.base - The offset of the first index or vertex to dispatch in the draw call." />
      <item value="@description Submits a graphical primitive to the hardware for immediate rendering." />
      <item value="prims" />
      <item value="unbind VAO from device to protect it from being changed" />
      <item value="@description Marks the end of a block of rendering. This function should be called after a matching call to {@link GraphicsDeviceupdateBegin}. Calls to {@link GraphicsDeviceupdateBegin} and {@link GraphicsDeviceupdateEnd} must not be nested." />
      <item value="clear texture units once a frame on desktop safari" />
      <item value="@description Marks the beginning of a block of rendering. Internally, this function binds the render target currently set on the device. This function should be matched with a call to {@link GraphicsDeviceupdateEnd}. Calls to {@link GraphicsDeviceupdateBegin} and {@link GraphicsDeviceupdateEnd} must not be nested." />
      <item value="@description Marks the beginning of a block of rendering. Internally, this function" />
      <item value="@description Copies source render target into destination render target. Mostly used by post-effects." />
      <item value="@description Set the active scissor rectangle on the specified device." />
      <item value="@param {number} x - The pixel space x-coordinate of the bottom left corner of the viewport." />
      <item value="@param {number} y - The pixel space y-coordinate of the bottom left corner of the viewport." />
      <item value="@description Set the active rectangle for rendering on the specified device." />
      <item value="make sure colorWrite is set to true to all channels, if you want to fully clear the target" />
      <item value="@description Sets the specified render target on the device. If null is passed as a parameter, the back buffer becomes the current target for all rendering operations." />
      <item value="optionally clip borders when rendering" />
      <item value="force change shader if the object uses a different variant of the same material" />
      <item value="prevMaterial = null; force change shader if the object uses a different variant of the same material" />
      <item value="apply visibility override" />
      <item value="Unset meshInstance overrides back to material values if next draw call will use the same material" />
      <item value="Revert temp frame stuff" />
      <item value="render shadows for all local visible lights - these shadow maps are shared by all cameras" />
      <item value="@description The shadow map is regenerated this frame and not on subsequent frames." />
      <item value="@description The shadow map is regenerated every frame." />
      <item value="Sort shadow casters" />
      <item value="set basic material statesparameters" />
      <item value="num Shadow Modes" />
      <item value="casters" />
      <item value="cascade" />
      <item value="directional" />
      <item value="directional shadows are per camera, so get appropriate render data" />
      <item value="appropriate" />
      <item value="dispatch" />
      <item value="Cascades" />
      <item value="fix accessing non-existing shadow mapcamera when the light was createdapplied, but shadowmap was never initialized" />
      <item value="heart texture's alpha channel as a cookie texture" />
      <item value="update Clusters" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="221" />
        <entry key="ENGLISH" value="222" />
        <entry key="LATIN" value="1" />
        <entry key="PORTUGUESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1626060918972" />
  </component>
</application>