<application>
  <component name="AppStorage">
    <histories>
      <item value="@classdesc Allows an Entity to render a mesh or a primitive shape like a box, capsule, sphere, cylinder, cone etc." />
      <item value="removes skin instance from the cache. This decreases ref count, and when that reaches 0 it gets destroyed" />
      <item value="Pass null to turn off hardware instancing." />
      <item value="@param {VertexBuffer|null} vertexBuffer - Vertex buffer to hold per-instance vertex data (usually world matrices)." />
      <item value="@param {VertexBuffer|null} vertexBuffer - Vertex buffer to hold per-instance vertex data (usually world matrices). Pass null to turn off hardware instancing." />
      <item value="@description Sets up {@link MeshInstance} to be rendered using Hardware Instancing." />
      <item value="Deprecated" />
      <item value="used to apply parameters from this mesh instance into scope of uniforms, called internally by forward-renderer" />
      <item value="a wrapper over settings parameter specifically for realtime baked lightmaps. This handles reference counting of lightmaps and releases them when no longer referenced" />
      <item value="this allows us to automatically release realtime baked lightmaps when mesh instances using them are destroyed" />
      <item value="cache of lightmaps internally created by baking using Lightmapper" />
      <item value="generates wireframes for an array of mesh instances" />
      <item value="A script you can attach on an entity to test if it is visible on a Layer" />
      <item value="@classdesc An instance of a {@link Mesh}. A single mesh can be referenced by many mesh instances that can have different transforms and materials." />
      <item value="@param {RenderComponentSystem} system - The ComponentSystem that created this Component." />
      <item value="@classdesc Enables an Entity to render a {@link Mesh} or a primitive shape. This component attaches {@link MeshInstance} geometry to the Entity." />
      <item value="@classdesc The forward renderer render scene objects." />
      <item value="@param {string} [name] - The non-unique name of the entity, default is &quot;Untitled&quot;." />
      <item value="ComponentSystems allow access to all Entities and Components and are attached to the {@link Application}." />
      <item value="Components are specific to an instance of an Entity and are attached (e.g. `this.entity.model`)" />
      <item value="The Component and ComponentSystem provide the logic to give an Entity a specific type of behavior. e.g. the ability to render a model or play a sound. Components are specific to an instance of an Entity and are attached (e.g. `this.entity.model`) ComponentSystems allow access to all Entities and Components and are attached to the {@link Application}." />
      <item value="The Entity uniquely identifies the object and also provides a transform for position and orientation which it inherits from {@link GraphNode} so can be added into the scene graph." />
      <item value="Roof" />
      <item value="Progressive" />
      <item value="Distribution" />
      <item value="orbit" />
      <item value="Set an update function on the app's update event" />
      <item value="destroy temporary directional lights as they are costly to keep around" />
      <item value="configured" />
      <item value="Create an entity with a spot light component that is configured as a baked light" />
      <item value="omni" />
      <item value="Create an entity with a omni light component that is configured as a baked light" />
      <item value="straight down" />
      <item value="straight" />
      <item value="random angle based on directionality, within 10 or 90 degrees from straight down" />
      <item value="pick appropriate ratio" />
      <item value="skydome" />
      <item value="hemisphere" />
      <item value="verbosely" />
      <item value="implements" />
      <item value="robust" />
      <item value="compact" />
      <item value="Capsule" />
      <item value="Destructor" />
      <item value="Utility functions" />
      <item value="Utility" />
      <item value="Extract compression statistics" />
      <item value="statistics" />
      <item value="decompression" />
      <item value="compression" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="63" />
        <entry key="ENGLISH" value="64" />
        <entry key="LATIN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1625123538836" />
  </component>
</application>